name: Azure Enterprise ACME
trigger:
  batch: "true"
  branches:
    include:
      - main

resources:
  repositories:
    - repository: cnp-azuredevops-libraries
      type: github
      ref: refs/heads/master
      name: hmcts/cnp-azuredevops-libraries
      endpoint: 'hmcts (1)'

parameters:
  - name: overrideAction
    type: string
    default: plan
    values:
      - plan
      - apply

  - name: environment_components
    type: object
    default:
      - stage: 'dcd_cft_sandbox'
        service_connection: 'GA'
      # - stage: 'dcd_cftappsdata_demo'
      #   service_connection: 'dcd-cftappsdata-demo'
      # - stage: 'dcd_cftapps_demo'
      #   service_connection: 'dcd-cftapps-demo'
      # - stage: 'dcd_cftapps_dev'
      #   service_connection: 'dcd-cftapps-dev'
      # - stage: 'dcd_cftapps_ithc'
      #   service_connection: 'dcd-cftapps-ithc'
      # - stage: 'dcd_cftapps_prod'
      #   service_connection: 'dcd-cftapps-prod'
      # - stage: 'dcd_cftapps_sbox'
      #   service_connection: 'dcd-cftapps-sbox'
      # - stage: 'dcd_cftapps_stg'
      #   service_connection: 'dcd-cftapps-stg'
      # - stage: 'dcd_cftapps_test'
      #   service_connection: 'dcd-cftapps-test'
      # - stage: 'dcd_cft_idam_dev'
      #   service_connection: 'dcd-cft-idam-dev'
      # - stage: 'dcd_cft_vh_pilot'
      #   service_connection: 'dcd-cft-vh-pilot'
      # - stage: 'dcd_cnp_dev'
      #   service_connection: 'dcd-cnp-dev'
      # - stage: 'dcd_cnp_prod'
      #   service_connection: 'dcd-cnp-prod'
      # - stage: 'dcd_cnp_qa'
      #   service_connection: 'dcd-cnp-qa'
      # - stage: 'dts_cftptl_intsvc'
      #   service_connection: 'dts-cftptl-intsvc'
      # - stage: 'dts_cftsbox_intsvc'
      #   service_connection: 'dts-cftsbox-intsvc'
      # - stage: 'dts_sharedservices_demo'
      #   service_connection: 'dts-sharedservices-demo'
      # - stage: 'dts_sharedservices_dev'
      #   service_connection: 'dts-sharedservices-dev'
      # - stage: 'dts_sharedservices_ithc'
      #   service_connection: 'dts-sharedservices-ithc'
      # - stage: 'dts_sharedservices_prod'
      #   service_connection: 'dts-sharedservices-prod'
      # - stage: 'dts_sharedservicesptl'
      #   service_connection: 'dts-sharedservicesptl'
      # - stage: 'dts_sharedservicesptl_sbox'
      #   service_connection: 'dts-sharedservicesptl-sbox'
      # - stage: 'dts_sharedservices_sbox'
      #   service_connection: 'dts-sharedservices-sbox'
      # - stage: 'dts_sharedservices_stg'
      #   service_connection: 'dts-sharedservices-stg'
      # - stage: 'dts_sharedservices_test'
      #   service_connection: 'dts-sharedservices-test'
      # - stage: 'hmcts_hub_dev'
      #   service_connection: 'hmcts-hub-dev'
      # - stage: 'hmcts_hub_prod_intsvc'
      #   service_connection: 'hmcts-hub-prod-intsvc'
      # - stage: 'hmcts_hub_sbox'
      #   service_connection: 'hmcts-hub-sbox'
      # - stage: 'hmcts_hub_sbox_intsvc'
      #   service_connection: 'hmcts-hub-sbox-intsvc'
      # - stage: 'hmcts_hub_test'
      #   service_connection: 'hmcts-hub-test'
      # - stage: 'hmcts_soc_prod'
      #   service_connection: 'hmcts-soc-prod'
      # - stage: 'hmcts_soc_sbox'
      #   service_connection: 'hmcts-soc-sbox'
      # - stage: 'reform_cft_vh_dev'
      #   service_connection: 'reform-cft-vh-dev'

variables:
  - name: timeoutInMinutes
    value: 60
  - name: agentPool
    value: ubuntu-latest
  - template: vars/input-variables.yaml@cnp-azuredevops-libraries
  - name: init_subscription
    value: '04d27a32-7a07-48b3-95b8-3c8691e1a263'
  - name: component
    value: acme


stages:
  - stage: Precheck
    jobs:
      - job: Precheck
        pool:
          vmImage: ${{ variables.agentPool }}
        timeoutInMinutes: ${{ variables.timeoutInMinutes }}
        steps:
          - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
            parameters:
              keyvaultName: 'infra-vault-nonprod'
              keyvaultSecret: 'azure-devops-token'
              serviceConnection: 'DCD-CFT-Sandbox'

  - ${{ each deployment in parameters.environment_components }}:
      - stage: ${{ deployment.stage }}
        ${{ if eq(deployment.stage, 'dcd_cft_sandbox') }}:
          dependsOn: 'Precheck'
        ${{ else }}:
          dependsOn: 'dcd_cft_sandbox'
        jobs:
          - job: TerraformPlanApply
            pool:
              vmImage: ${{ variables.agentPool }}
            timeoutInMinutes: ${{ variables.timeoutInMinutes }}
            steps:
              - task: AzureCLI@2
                inputs:
                  azureSubscription: ${{ deployment.service_connection }}
                  scriptType: 'bash'
                  scriptLocation: 'inlineScript'
                  arguments: SUBSCRIPTION_NAME=$[replace(deployment.stage, '_', '-')]
                  inlineScript: |
                    az account subscription list --query "[?displayName=='$SUBSCRIPTION_NAME'].{subscriptionId:subscriptionId}" --only-show-errors -o tsv
              # - template: steps/terraform.yaml@cnp-azuredevops-libraries
              #   parameters:
              #     overrideAction: ${{ parameters.overrideAction }}
              #     ${{ if contains(deployment.stage, 'demo') }}:
              #       environment: 'demo'
              #     ${{ if contains(deployment.stage, 'dev') }}:
              #       environment: 'dev'
              #     ${{ if contains(deployment.stage, 'qa') }}:
              #       environment: 'dev'
              #     ${{ if contains(deployment.stage, 'ithc') }}:
              #       environment: 'ithc'
              #     ${{ if contains(deployment.stage, 'ptl') }}:
              #       environment: 'ptl'
              #     ${{ if contains(deployment.stage, 'ptlsbox') }}:
              #       environment: 'ptlsbox'
              #     ${{ if contains(deployment.stage, 'prod') }}:
              #       environment: 'prod'                    
              #     ${{ if contains(deployment.stage, 'sbox') }}:
              #       environment: 'sbox'
              #     ${{ if contains(deployment.stage, 'sandbox') }}:
              #       environment: 'sbox'
              #     ${{ if contains(deployment.stage, 'stg') }}:
              #       environment: 'stg'
              #     ${{ if contains(deployment.stage, 'test') }}:
              #       environment: 'test'
              #     component: ${{ variables.component }}
              #     serviceConnection: ${{ deployment.service_connection }}
              #     terraformInitSubscription: ${{ variables.init_subscription }}
              #     ${{ if contains(deployment.stage, 'cft') }}:
              #       product: 'cft-platform'
              #     ${{ if contains(deployment.stage, 'cnp') }}:
              #       product: 'cft-platform'
              #     ${{ if contains(deployment.stage, 'sharedservices') }}:
              #       product: 'sds-platform'
              #     ${{ if contains(deployment.stage, 'hub') }}:
              #       product: 'hub'
              #     ${{ if contains(deployment.stage, 'soc') }}:
              #       product: 'soc'
